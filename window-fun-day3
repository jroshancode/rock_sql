#2025 - 08 - 21 

use my_db;
select * from train;
select * from housing_price;
select * from employee_data;


-- N tile ( number of data split into n groups ) 
select StartDate, EmployeeClassificationType , DepartmentType , Division, EmployeeType,
ntile(5) over (order by StartDate) as n_tile 
from employee_data;

select StartDate, EmployeeClassificationType , DepartmentType , Division, EmployeeType,
ntile(5) over (partition by EmployeeClassificationType) as n_tile 
from employee_data;


select Category, `Sub-Category`,`Ship Mode`,Segment , Region,sales, 
ntile(3) over(order by sales ) as n_tile 
from train;

select Category, `Sub-Category`,`Ship Mode`,Segment , Region,sales, 
ntile(3) over(partition by `Ship Mode` order by sales ) as n_tile 
from train;


-- lag( first record will be zero )  and lead ( last recod will be zero 

select concat(FirstName , " ", LastName) as full_name , 
StartDate , ExitDate , Supervisor , EmployeeType , MaritalDesc,
lag(StartDate,1) over(order by StartDate) as pre_date ,
lag(StartDate,3) over(order by StartDate) as pre_third,
lead(StartDate,1) over(order by StartDate) as next_date ,
lead(StartDate,2) over(order by StartDate) as next_second
from Employee_data;

select Category, `Sub-Category`,`Ship Mode`,Segment , Region,sales, 
lag(sales,3) over(partition by `Ship Mode` order by sales ) as prev_three,
lead(sales,3) over(partition by `Ship Mode` order by sales ) as next_three
from train;


select * from ( 
select Category, `Sub-Category`,`Ship Mode`,Segment , Region,sales, 
lag(sales,1) over(partition by `Ship Mode` order by sales ) as prev_three,
lead(sales,1) over(partition by `Ship Mode` order by sales ) as next_three
from train ) as t
where sales = prev_three;


select * from ( 
select `Order Date`, `Ship Date`,Category , `Sub-Category` , Sales,
lead(`Order Date`,1) over( partition by Category order by `Order Date` ) as next
from train ) as t 
where `Order Date` =next;

-- Find the first sales in each categories or ( Category , `Sub-Category` ) 
select * from ( 
select Category, `Sub-Category`,`Ship Mode`,Segment , Region,sales, 
row_number() over(partition by Category order by sales desc ) as first_val 
from train ) as t 
where first_val = 1;

-- first_value and last_value 
-- select * from ( 
select Category, `Sub-Category`,`Ship Mode`,Segment , Region,sales, 
first_value(sales) over(partition by Category order by sales) as first_val ,
row_number() over(partition by Category order by sales) as r_num ,
rank() over(partition by Category order by sales) as r ,
dense_rank() over(partition by Category order by sales) as d_rank
from train ;
-- ) as t 
-- where first_val = 1;


-- Running Total or Average 

select Category, `Sub-Category`,`Ship Mode`,Segment , Region,sales,
sum(sales) over(order by sales ) as total_sum,
avg(sales) over(order by sales ) as total_average
from train;

select Category, `Sub-Category`,`Ship Mode`,Segment , Region,sales,
sum(sales) over(partition by Category order by sales ) as total_sum,
avg(sales) over(partition by Category order by sales ) as total_average
from train;

-- Moving Average or sum ( 
select Category, `Sub-Category`,`Ship Mode`,Segment , Region,sales,
sum(sales) over(order by sales rows between 3 preceding and current row ) as total_sum,
avg(sales) over(order by sales rows between 3 preceding and current row ) as total_average
from train;

select Category, `Sub-Category`,`Ship Mode`,Segment , Region,sales,
sum(sales) over(partition by Category order by sales rows between 3 preceding and current row ) as total_sum,
avg(sales) over( partition by Category order by sales rows between 3 preceding and current row ) as total_average
from train;
